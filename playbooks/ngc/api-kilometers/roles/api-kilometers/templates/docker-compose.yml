version: "3.7"
networks:
  default:
    external: true
    name: kilometers-api
  traefik-proxy:
    external: true
    name: traefik-proxy
volumes:
  share_media:
    driver: local
    driver_opts: 
      o: bind
      device: {{ GLUSTER_SHARE_PATH }}{{ PROJECT_NAME }}/media
      type: glusterfs
  share_static: 
    driver: local
    driver_opts: 
      o: bind
      device: {{ GLUSTER_SHARE_PATH }}{{ PROJECT_NAME }}/static
      type: glusterfs

services:

  migration:
    image: babel.ngc-data.fr:8443/ngc/kilometers/api:{{ APP_VERSION }}
    command:  python /app/manage.py migrate
    logging:
      options:
        tag: docker.{{ PROJECT_NAME }}.django
        fluentd-async-connect: "true"
    environment:
{% for  name, value in APP_ENV.items() %}
      {{ name }}: "{{ value }}"
{% endfor %}
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.5"
          memory: "200M"
      restart_policy:
        condition: none
      rollback_config:
        failure_action: pause
        order: start-first
        delay: 10s
        parallelism: 1
      update_config:
        failure_action: rollback
        order: start-first
        delay: 10s
        parallelism: 1

  django:
    image: babel.ngc-data.fr:8443/ngc/kilometers/api:{{ APP_VERSION }}
    command: /start
    hostname: "{{ PROJECT_NAME }}-web.{{ NODE_HOSTNAME }}"
    environment:
{% for  name, value in APP_ENV.items() %}
      {{ name }}: "{{ value }}"
{% endfor %}
    logging:
      driver: fluentd
      options:
        tag: docker.{{ PROJECT_NAME }}.django
        fluentd-async-connect: "true"
    deploy:
      replicas: 3
      rollback_config:
        failure_action: pause
        order: start-first
        delay: 10s
        parallelism: 1
      update_config:
        failure_action: rollback
        order: start-first
        delay: 10s
        parallelism: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '2'
          memory: 500M
        reservations:
          cpus: '0.25'
          memory: 20M
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-proxy"
        - "traefik.http.routers.{{ PROJECT_NAME }}.rule=Host(`{{ PROJECT_URL_DOMAIN }}`)"
        - "traefik.http.routers.{{ PROJECT_NAME }}.entrypoints=web"
        - "traefik.http.routers.{{ PROJECT_NAME }}.service=api-{{ PROJECT_NAME }}"
        - "traefik.http.services.api-{{ PROJECT_NAME }}.loadbalancer.server.port=8000"
    healthcheck:
      test: ["CMD", "python", "-c" ,"import urllib.request; print (0 if urllib.request.urlopen('http://localhost:8000/api/exploit/alive').getcode()==200 else 1)"]
      interval: "20s"
      timeout: "10s"
      retries: 3
    networks:
      - traefik-proxy
    volumes:
      - "share_static:/app/staticfiles:z"
      - "share_media:/app/media:z"
