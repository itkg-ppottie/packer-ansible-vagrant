
  # lOAD PROJECT ENV VARS

- name: load vars to generate docker-compose file's
  include_vars:
    file: "../../../../../../{{ PROJECT_VARS_FILE }}"
    name: APP_ENV

- name: "Create a directory {{ PROJECT_NAME }} on gluster volume"
  file:
    path: "/mnt/glusterfs/{{ item }}"
    state: directory
    owner: "{{ PROJECT_USER }}"
    group: "{{ PROJECT_USER }}"
  loop:
    - "{{ PROJECT_NAME }}"
    - "{{ PROJECT_NAME }}/nginx"
    - "{{ PROJECT_NAME }}/nginx/conf.d"
    - "{{ PROJECT_NAME }}/static"
    - "{{ PROJECT_NAME }}/redis"

- name: "Create a directory {{ PROJECT_NAME }}"
  file:
    path: "{{ PROJECT_HOME }}"
    state: directory
    owner: "{{ PROJECT_USER }}"
    group: "{{ PROJECT_USER }}"

- name: Copy docker-compose.yml and conf files to master
  template:
    src: "./templates/docker-compose.yml"
    dest: "{{ PROJECT_HOME }}/{{ PROJECT_NAME }}-compose.yml"
    owner: "{{ PROJECT_USER }}"
    group: "{{ PROJECT_USER }}"
    force: true

- name: copy nginx config file to shared directory's
  copy:
    src: "./templates/conf.d/default.conf"
    dest: "/mnt/glusterfs/{{ PROJECT_NAME }}/nginx/conf.d/default.conf"
    force: true

- name: "remove {{ PROJECT_NAME }} stack"
  community.docker.docker_stack:
    state: absent
    name: "{{ PROJECT_NAME }}"

- name: "deploy {{ PROJECT_NAME }} stack"
  community.docker.docker_stack:
    state: present
    name: "{{ PROJECT_NAME }}"
    with_registry_auth: yes
    compose:
      - "{{ PROJECT_HOME }}/{{ PROJECT_NAME }}-compose.yml"
  # environment:
  #   PROJECT_URL_DOMAIN: "{{ PROJECT_URL_DOMAIN }}"
  #   POSTGRESQL_HOST: "{{ POSTGRESQL_HOST }}"
  #   LAFA_COMMON_HOST: "{{ LAFA_COMMON_HOST }}"
  #   PROJECT_NAME: "{{ PROJECT_NAME }}"
