version: "3.7"
x-default-rollback: &default_rollback_config
    failure_action: "pause"
    order: "start-first"
    delay: "10s"
    parallelism: 1
x-default-update-config: &default_update_config
    failure_action: "rollback"
    order: "start-first"
    delay: "10s"
    parallelism: 1

networks:
    front:
        external: true
        name: "{{ PROJECT_NAME }}-{{ PROJECT_SERVICE_NAME }}"
    api:
        external: true
        name: "{{ PROJECT_NAME }}-api"
    traefik-proxy:
        external: true
        name: "traefik-proxy"

volumes:
    share_public_{{ ENVIRONS['VERSION'] }}:
        driver: "local"
        driver_opts:
            o: "bind"
            device: "{{ GLUSTER_SHARE_PATH }}/{{ PROJECT_NAME }}/{{ PROJECT_SERVICE_NAME }}/{{ ENVIRONS['VERSION'] }}/public"
            type: "glusterfs"
    share_upload:
        driver: "local"
        driver_opts:
            o: "bind"
            device: "{{ GLUSTER_SHARE_PATH }}/{{ PROJECT_NAME }}/upload"
            type: "glusterfs"

services:
    back_httpd:
        image: babel.ngc-data.fr:8443/transversal/docker/nginx:1.21-env-conf
        hostname: "{{ PROJECT_NAME }}-{{ PROJECT_SERVICE_NAME }}-httpd.{{ NODE_HOSTNAME }}"
        environment:
            STREAM_HOST: internal-{{ PROJECT_NAME }}-{{ PROJECT_SERVICE_NAME }}-php
            STREAM_PORT: 9000
            STREAM_STATICS_PATH: assets|manifest.json|upload
        logging:
            driver: fluentd
            options:
                tag: docker.{{ PROJECT_NAME }}-{{ PROJECT_SERVICE_NAME }}.httpd
                fluentd-async-connect: "true"
        deploy:
            replicas: 2
            rollback_config: *default_rollback_config
            update_config: *default_update_config
            restart_policy:
                condition: "on-failure"
            resources:
                limits:
                    cpus: "0.25"
                    memory: "500M"
                reservations:
                    cpus: "0.05"
                    memory: "20M"
        healthcheck:
            test: "curl  http://localhost/nginx_status -s -f -o /dev/null"
            interval: 30s
            timeout: 5s
            retries: 3
            start_period: 5s
        volumes:
            - share_public_{{ ENVIRONS['VERSION'] }}:/srv/var/public
            - share_upload:/srv/upload
        networks:
            - api
            - traefik-proxy
            - front
        command: /bin/sh -c "envsubst '$$STREAM_HOST $$STREAM_PORT $$STREAM_STATICS_PATH' < /etc/nginx/conf.d/php-fpm-with-statics.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

    migration:
        image: "babel.ngc-data.fr:8443/ngc-projects/avzp/back/php:{{ VERSION }}"
        command: kill -USR2 1
        logging:
            driver: fluentd
            options:
                tag: docker.{{ PROJECT_NAME }}-{{ PROJECT_SERVICE_NAME }}.migrations
                fluentd-async-connect: "true"
        env_file:
            - ".env_{{ PROJECT_SERVICE_NAME }}"
        volumes:
            - share_public_{{ ENVIRONS['VERSION'] }}:/srv/var/public
        environment:
            PUBLIC_SHARED: enabled
            UPLOAD_SHARED: enabled
        networks:
            - back
            - redis
        extra_hosts: *default-extra-hosts
        deploy:
            replicas: 1
            rollback_config: *default_rollback_config
            update_config: *default_update_config
            restart_policy:
                condition: "none"
            resources:
                limits:
                    cpus: "0.25"
                    memory: "500M"
                reservations:
                    cpus: "0.05"
                    memory: "20M"
    back_php:
        image: "babel.ngc-data.fr:8443/ngc-projects/avzp/back/php:{{ VERSION }}"
        logging:
            driver: fluentd
            options:
                tag: docker.{{ PROJECT_NAME }}-{{ PROJECT_SERVICE_NAME }}.php
                fluentd-async-connect: "true"
        env_file:
            - ".env_{{ PROJECT_SERVICE_NAME }}"
        networks:
            back:
                aliases:
                    - "internal-{{ PROJECT_NAME }}-{{ PROJECT_SERVICE_NAME }}-php"
            api:
            redis:
        extra_hosts: *default-extra-hosts
        deploy:
            replicas: 2
            rollback_config: *default_rollback_config
            update_config: *default_update_config
            restart_policy:
                condition: "on-failure"
            resources:
                limits:
                    cpus: "0.25"
                    memory: "500M"
                reservations:
                    cpus: "0.05"
                    memory: "20M"
        volumes:
            - share_public_{{ ENVIRONS['VERSION'] }}:/srv/var/public
            - share_upload:/srv/upload
