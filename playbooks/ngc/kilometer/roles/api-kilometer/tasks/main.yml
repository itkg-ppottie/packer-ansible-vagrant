
- name: Create a directory kilometer-api on gluster volume
  file:
    path: "/mnt/gluster/{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
  loop:
    - "api-kilometer"
    - "api-kilometer/nginx"
    - "api-kilometer/nginx/conf.d"
    - "api-kilometer/static"
    - "api-kilometer/redis"

- name: Create a directory kilometer-api
  file:
    path: "/home/{{ username }}/api-kilometer"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"

# TODO : recuperer le docker-compose-swarm du projet

- name: Copy docker-compose.yml and conf files to master
  copy:
    src: "../../../{{ world }}/api-kilometer/docker-compose-swarm.yml"
    dest: "/home/{{ username }}/api-kilometer/docker-compose.yml"
    owner: "{{ username }}"
    group: "{{ username }}"
    force: true



- name: copy nginx config file to shared directory's
  copy:
    src: "../../../{{ world }}/api-kilometer/conf.d/default.conf"
    dest: "/mnt/gluster/api-kilometer/nginx/conf.d/default.conf"
    force: true


- name: copy env vars file
  copy:
    src: "../../../{{ world }}/api-kilometer/sample.env"
    dest: "/home/{{ username }}/api-kilometer/.env"
    owner: "{{ username }}"
    group: "{{ username }}"
    force: true

- name: remove api_kilometer stack
  community.docker.docker_stack:
    state: absent
    name: api_kilometer

- debug: var=PROJECT_URL_DOMAIN
- debug: var=POSTGRESQL_HOST
- debug: var=LAFA_COMMON_HOST
- debug: var=PROJECT_NAME

- name: deploy api_kilometer stack
  community.docker.docker_stack:
    state: present
    name: api_kilometer
    with_registry_auth: yes
    compose:
      - "/home/{{ username }}/api-kilometer/docker-compose.yml"
  environment:
    PROJECT_URL_DOMAIN: "{{ PROJECT_URL_DOMAIN }}"
    POSTGRESQL_HOST: "{{ POSTGRESQL_HOST }}"
    LAFA_COMMON_HOST: "{{ LAFA_COMMON_HOST }}"
    PROJECT_NAME: "{{ PROJECT_NAME }}"
