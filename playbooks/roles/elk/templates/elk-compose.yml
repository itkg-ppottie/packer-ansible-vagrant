version: '3.3'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:{{ VERSION }}
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    networks:
      - elastic

  # es02:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:{{ VERSION }}
  #   container_name: es02
  #   environment:
  #     - node.name=es02
  #     - cluster.name=es-docker-cluster
  #     - discovery.seed_hosts=es01,es03
  #     - cluster.initial_master_nodes=es01,es02,es03
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   restart: always
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - data02:/usr/share/elasticsearch/data
  #   networks:
  #     - elastic

  # es03:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:{{ VERSION }}
  #   container_name: es03
  #   environment:
  #     - node.name=es03
  #     - cluster.name=es-docker-cluster
  #     - discovery.seed_hosts=es01,es02
  #     - cluster.initial_master_nodes=es01,es02,es03
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   restart: always
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - data03:/usr/share/elasticsearch/data
  #   networks:
  #     - elastic
  apm:
    image: docker.elastic.co/apm/apm-server:{{ VERSION }}
    container_name: apm-server
    volumes:
      - ./apm/apm-server.docker.yml:/usr/share/apm-server/apm-server.yml:ro
    environment:
      - ES_HOSTS=["es01:9200"]
    command: --strict.perms=false -e
    restart: always
    ports:
     - "8200:8200"
    depends_on:
      - es01
      # - es02
      # - es03
      - kib01
    networks:
      - elastic

  logstash:
    image: docker.elastic.co/logstash/logstash:{{ VERSION }}
    networks:
      - elastic
    restart: always
    environment:
      LS_JAVA_OPTS: "-Xmx512m -Xms512m"
    volumes:
      - type: "bind"
        source: "./logstash/pipeline/logstash.conf"
        target: "/usr/share/logstash/piepline/logstash.yml"
        read_only: "true"
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
      - 12201:12201/udp
    links:
      - es01:elasticsearch
    depends_on:
      - es01

  kib01:
    image: docker.elastic.co/kibana/kibana:{{ VERSION }}
    container_name: kib01
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
    networks:
      - elastic
    restart: always

  proxy:
    build: ./nginx-proxy
    container_name: elk-proxy
    depends_on:
      - es01
      # - es02
      # - es03
      - kib01
      - apm
      - logstash
    restart: always
    ports:
      - "8080:80"
      - "9200:9200"
    networks:
      - elastic

volumes:
  data01:
    driver: local
  # data02:
  #   driver: local
  # data03:
  #   driver: local

networks:
  elastic:
    driver: bridge
